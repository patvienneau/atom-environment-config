{"mappings":"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","sources":["./node_modules/.pnpm/@parcel+scope-hoisting@2.0.0-nightly.651/node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/dist/solid.js","./node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/web/dist/web.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/typeof.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/arrayWithHoles.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/slicedToArray.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./node_modules/.pnpm/@babel+runtime@7.13.9/node_modules/@babel/runtime/helpers/nonIterableRest.js","./src/SimpleTable.tsx"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      let k = n + m >> 1;\n      let cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}.`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = createSignal(false);\nvar Owner = null;\nvar Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet Transition = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  detachedOwner && (Owner = detachedOwner);\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner,\n    attached: !!detachedOwner\n  };\n  Owner = root;\n  Listener = null;\n  let result;\n  try {\n    runUpdates(() => result = fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  return result;\n}\nfunction createSignal(value, areEqual = true, options) {\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined\n  };\n  return [readSignal.bind(s), writeSignal.bind(s)];\n}\nfunction createComputed(fn, value) {\n  updateComputation(createComputation(fn, value, true));\n}\nfunction createRenderEffect(fn, value) {\n  updateComputation(createComputation(fn, value, false));\n}\nfunction createEffect(fn, value) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects && Effects.push(c);\n}\nfunction resumeEffects(e) {\n  Transition && (Transition.running = true);\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createMemo(fn, value, areEqual = true) {\n  const c = createComputation(fn, value, true);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.state = 0;\n  c.comparator = areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined;\n  updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const [deferred, setDeferred] = createSignal();\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  updateComputation(node);\n  setDeferred(node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn) {\n  let subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) || p !== undefined && fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.size > 1 ? l.delete(listener) : subs.delete(key);\n      });\n    }\n    return fn(key, node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  const q = Pending = [],\n        result = fn();\n  Pending = null;\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal.call(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction useTransition() {\n  return [transPending, (fn, cb) => {\n    if (SuspenseContext) {\n      Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        running: true,\n        cb: []\n      });\n      cb && Transition.cb.push(cb);\n      Transition.running = true;\n    }\n    batch(fn);\n    if (!SuspenseContext && cb) cb();\n  }];\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(...args) {\n  const fn = args.pop();\n  let deps;\n  let isArray = true;\n  let prev;\n  if (args.length < 2) {\n    deps = args[0];\n    isArray = false;\n  } else deps = args;\n  return prevResult => {\n    let value;\n    if (isArray) {\n      value = [];\n      if (!prev) prev = [];\n      for (let i = 0; i < deps.length; i++) value.push(deps[i]());\n    } else value = deps();\n    const result = untrack(() => fn(value, prev, prevResult));\n    prev = value;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return fn();\n  } finally {\n    Owner = prev;\n  }\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return lookup(Owner, context.id) || context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction createResource(fn, fetcher, options = {}) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = fn;\n      fn = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = fn;\n    fn = true;\n  }\n  const contexts = new Set(),\n        [s, set] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, false),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      dynamic = typeof fn === \"function\";\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.context.loadResource) {\n      initP = sharedConfig.context.loadResource(id);\n    } else if (sharedConfig.resources && id && id in sharedConfig.resources) {\n      initP = sharedConfig.resources[id];\n      delete sharedConfig.resources[id];\n    }\n  }\n  function loadEnd(p, v, e) {\n    if (pr === p) {\n      setError(err = e);\n      pr = null;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      set(v);\n      setLoading(false);\n      for (let c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = s();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load() {\n    setError(err = undefined);\n    let lookup = dynamic ? fn() : fn;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(s));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || fetcher(lookup, s);\n    initP = null;\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return;\n    }\n    pr = p;\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    p.then(v => loadEnd(p, v), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    }\n  });\n  if (dynamic) createComputed(load);else load();\n  return [read, {\n    refetch: load,\n    mutate: set\n  }];\n}\nfunction readSignal() {\n  if (this.state && this.sources) {\n    const updates = Updates;\n    Updates = null;\n    this.state === STALE ? updateComputation(this) : lookDownstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (Transition && Transition.running && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(value, isComp) {\n  if (this.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(this)) {\n      if (this.comparator(this.tValue, value)) return value;\n    } else if (this.comparator(this.value, value)) return value;\n  }\n  if (Pending) {\n    if (this.pending === NOTPENDING) Pending.push(this);\n    this.pending = value;\n    return value;\n  }\n  if (Transition) {\n    if (Transition.running || !isComp && Transition.sources.has(this)) {\n      Transition.sources.add(this);\n      this.tValue = value;\n    }\n    if (!Transition.running) this.value = value;\n  } else this.value = value;\n  if (this.observers && (!Updates || this.observers.length)) {\n    runUpdates(() => {\n      for (let i = 0; i < this.observers.length; i += 1) {\n        const o = this.observers[i];\n        if (Transition && Transition.running && Transition.disposed.has(o)) continue;\n        if (o.observers && o.state !== PENDING) markUpstream(o);\n        o.state = STALE;\n        if (o.pure) Updates.push(o);else Effects.push(o);\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        throw new Error(\"Potential Infinite Loop Detected.\");\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    Transition.running = true;\n    runComputation(node, node.tValue, time);\n    Transition.running = false;\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal.call(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure) {\n  const c = {\n    fn,\n    state: STALE,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  return c;\n}\nfunction runTop(node) {\n  let top = node.state === STALE && node,\n      pending;\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const runningTransition = Transition && Transition.running;\n  while ((node.fn || runningTransition && node.attached) && (node = node.owner)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (node.state === PENDING) pending = node;else if (node.state === STALE) {\n      top = node;\n      pending = undefined;\n    }\n  }\n  if (pending) {\n    const updates = Updates;\n    Updates = null;\n    lookDownstream(pending);\n    Updates = updates;\n    if (!top || top.state !== STALE) return;\n    if (runningTransition) {\n      node = top;\n      while ((node.fn || node.attached) && (node = node.owner)) {\n        if (Transition.disposed.has(node)) return;\n      }\n    }\n  }\n  top && updateComputation(top);\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    completeUpdates(wait);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let cbs;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    cbs = Transition.cb;\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (cbs) cbs.forEach(cb => cb());\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookDownstream(node) {\n  node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (source.state === STALE) runTop(source);else if (source.state === PENDING) lookDownstream(source);\n    }\n  }\n}\nfunction markUpstream(node) {\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!o.state) {\n      o.state = PENDING;\n      o.observers && markUpstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.state = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner && (owner.context && owner.context[key] || owner.owner && lookup(owner.owner, key));\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      let result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    return createMemo(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    });\n  };\n}\n\nconst $RAW = Symbol(\"state-raw\"),\n      $NODE = Symbol(\"state-node\"),\n      $PROXY = Symbol(\"state-proxy\"),\n      $NAME = Symbol(\"state-name\");\nfunction wrap$1(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  return obj != null && typeof obj === \"object\" && (!obj.__proto__ || obj.__proto__ === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    let keys = Object.keys(item),\n        desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes) Object.defineProperty(target, $NODE, {\n    value: nodes = {}\n  });\n  return nodes;\n}\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || property === $PROXY || property === $NODE || property === $NAME) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction createDataNode() {\n  const [s, set] = createSignal(undefined, false);\n  s.set = set;\n  return s;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap$1(value) : value;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction setProperty(state, property, value) {\n  if (state[property] === value) return;\n  const array = Array.isArray(state);\n  const len = state.length;\n  const notify = array || !(property in state);\n  if (value === undefined) {\n    delete state[property];\n  } else state[property] = value;\n  let nodes = getDataNodes(state),\n      node;\n  (node = nodes[property]) && node.set();\n  if (array && state.length !== len) (node = nodes.length) && node.set();\n  notify && (node = nodes._) && node.set();\n}\nfunction mergeState(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n      prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n          isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), [part[i]].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeState(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createState(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap$1(unwrappedState);\n  function setState(...args) {\n    batch(() => updatePath(unwrappedState, args));\n  }\n  return [wrappedState, setState];\n}\n\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap(value) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n              set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap(unwrappedState);\n  return wrappedState;\n}\n\nfunction applyState(target, parent, property, merge, key) {\n  let previous = parent[property];\n  if (target === previous) return;\n  if (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key]) {\n    target !== previous && setProperty(parent, property, target);\n    return;\n  }\n  if (Array.isArray(target)) {\n    if (target.length && previous.length && (!merge || key && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n            newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n    merge,\n    key = \"id\"\n  } = options,\n        v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    applyState(v, {\n      state\n    }, \"state\", merge, key);\n    return state;\n  };\n}\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    return isWrappable(value) ? new Proxy(value, setterTraps) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) fn(new Proxy(state, setterTraps));\n    return state;\n  };\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n          for (j = 0; j < newLen; j++) {\n            items[j] = newItems[j];\n            mapped[j] = createRoot(mapper, ctx);\n          }\n          len = newLen;\n        } else {\n          temp = new Array(newLen);\n          tempdisposers = new Array(newLen);\n          indexes && (tempIndexes = new Array(newLen));\n          for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n          for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n            temp[newEnd] = mapped[end];\n            tempdisposers[newEnd] = disposers[end];\n            indexes && (tempIndexes[newEnd] = indexes[end]);\n          }\n          newIndices = new Map();\n          newIndicesNext = new Array(newEnd + 1);\n          for (j = newEnd; j >= start; j--) {\n            item = newItems[j];\n            i = newIndices.get(item);\n            newIndicesNext[j] = i === undefined ? -1 : i;\n            newIndices.set(item, j);\n          }\n          for (i = start; i <= end; i++) {\n            item = items[i];\n            j = newIndices.get(item);\n            if (j !== undefined && j !== -1) {\n              temp[j] = mapped[i];\n              tempdisposers[j] = disposers[i];\n              indexes && (tempIndexes[j] = indexes[i]);\n              j = newIndicesNext[j];\n              newIndices.set(item, j);\n            } else disposers[i]();\n          }\n          for (j = start; j < newLen; j++) {\n            if (j in temp) {\n              mapped[j] = temp[j];\n              disposers[j] = tempdisposers[j];\n              if (indexes) {\n                indexes[j] = tempIndexes[j];\n                indexes[j](j);\n              }\n            } else mapped[j] = createRoot(mapper, ctx);\n          }\n          len = mapped.length = newLen;\n          items = newItems.slice(0);\n        }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    const newItems = list() || [];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper, ctx);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = mapped.length = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], false);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nfunction createComponent(Comp, props) {\n  if (sharedConfig.context) {\n    const c = sharedConfig.context;\n    setHydrateContext(nextHydrateContext());\n    const r = untrack(() => Comp(props));\n    setHydrateContext(c);\n    return r;\n  }\n  return untrack(() => Comp(props));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = sources[i][property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in sources[i]) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(sources[i]));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (descriptors[key]) Object.defineProperty(clone, key, descriptors[key]);\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    let comp;\n    if (ctx && sharedConfig.resources) {\n      ctx.count++;\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(mod.default);\n        setHydrateContext(undefined);\n      });\n      comp = s;\n    } else {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => (p || (p = fn())).then(mod => mod.default);\n  return wrap;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, (a, b) => strictEqual ? a === b : !a === !b);\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, (a, b) => a && a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]);\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nfunction ErrorBoundary(props) {\n  const [errored, setErrored] = createSignal();\n  onError(setErrored);\n  let e;\n  return createMemo(() => {\n    if ((e = errored()) != null) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(null))) : f;\n    }\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  };\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      const rendered = untrack(() => props.children);\n      return createMemo(() => {\n        const inFallback = store.inFallback(),\n              visibleContent = showContent ? showContent() : true,\n              visibleFallback = showFallback ? showFallback() : true;\n        if (!inFallback && visibleContent) {\n          store.resolved = true;\n          resumeEffects(store.effects);\n          return rendered;\n        }\n        if (!visibleFallback) return;\n        return props.fallback;\n      });\n    }\n  });\n}\n\nfunction awaitSuspense() {}\nlet DEV;\n\nexport { $RAW, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, awaitSuspense, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createMutable, createRenderEffect, createResource, createRoot, createSelector, createSignal, createState, equalFn, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, on, onCleanup, onError, onMount, produce, reconcile, requestCallback, runWithOwner, sharedConfig, splitProps, untrack, unwrap, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"allowpaymentrequest\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\", \"truespeed\"];\nconst Properties = new Set([\"className\", \"indeterminate\", \"value\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nfunction memo(fn, equal) {\n  return createMemo(fn, undefined, equal);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) parentNode.removeChild(a[aStart]);\n        aStart++;\n      }\n    } else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    } else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else parentNode.removeChild(a[aStart++]);\n    }\n  }\n}\n\nconst $$EVENTS = Symbol(\"delegated-events\");\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  if (check && t.innerHTML.split(\"<\").length - 1 !== check) throw `Template html does not match input:\\n${t.innerHTML}\\n\\n${html}`;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents() {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || key in value) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue) continue;\n    toggleClassKey(node, key, classValue);\n    prev[key] = classValue;\n  }\n  return value;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (prev = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}) {\n  let isCE, isProp, isChildProp;\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    if (value === prevProps[prop]) continue;\n    if (prop === \"style\") {\n      style(node, value, prevProps[prop]);\n    } else if (prop === \"class\" && !isSVG) {\n      node.className = value;\n    } else if (prop === \"classList\") {\n      classList(node, value, prevProps[prop]);\n    } else if (prop === \"ref\") {\n      value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n      node.addEventListener(prop.slice(3), value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n      node.addEventListener(prop.slice(10), value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n      const name = prop.slice(2).toLowerCase();\n      const delegate = DelegatedEvents.has(name);\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (isProp = Properties.has(prop)) || (isCE = node.nodeName.includes(\"-\"))) {\n      if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[prop] = value;\n    } else {\n      const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n      if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n    }\n    prevProps[prop] = value;\n  }\n}\nfunction hydrate(code, element) {\n  sharedConfig.resources = globalThis._$HYDRATION.resources;\n  sharedConfig.completed = globalThis._$HYDRATION.completed;\n  sharedConfig.events = globalThis._$HYDRATION.events;\n  sharedConfig.context = {\n    id: \"\",\n    count: 0,\n    loadResource: globalThis._$HYDRATION.loadResource\n  };\n  sharedConfig.registry = new Map();\n  gatherHydratable(element);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction gatherHydratable(element) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    sharedConfig.registry.set(node.getAttribute(\"data-hk\"), node);\n  }\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node;\n    }\n  });\n  while (node !== null) {\n    const handler = node[key];\n    if (handler) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context && current.length) return current;\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else {\n      if (Array.isArray(current)) {\n        if (current.length === 0) {\n          appendNodes(parent, array, marker);\n        } else reconcileArrays(parent, current, array);\n      } else if (current == null || current === \"\") {\n        appendNodes(parent, array);\n      } else {\n        reconcileArrays(parent, multi && current || [parent.firstChild], array);\n      }\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else console.warn(`Skipped inserting`, value);\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && parent.removeChild(el);\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\n\nfunction renderToString(fn, options) {}\nfunction renderToStringAsync(fn, options) {}\nfunction renderToNodeStream(fn, options) {}\nfunction renderToWebStream(fn, options) {}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction escape(html) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, ChildProperties, DelegatedEvents, Dynamic, Portal, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, gatherHydratable, getHydrationKey, getNextElement, getNextMarker, hydrate, insert, isServer, memo, render, renderToNodeStream, renderToString, renderToStringAsync, renderToWebStream, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrSpread, ssrStyle, style, template };\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { createSignal, createComputed, For } from \"solid-js\"\r\nimport \"./SimpleTable.less\" // eslint-disable-line import/no-unassigned-import\r\nimport {\r\n  Props,\r\n  IndexType,\r\n  SortDirectionSignal,\r\n  RowsSignal,\r\n  SortDirection,\r\n  NonNullSortDirection,\r\n  Row,\r\n  Column,\r\n} from \"./SimpleTable.types\"\r\n\r\nexport * from \"./SimpleTable.types\"\r\n\r\nexport function SimpleTable(props: Props<IndexType>) {\r\n  const [getSortDirectionSignal, setSortDirection] = createSignal<SortDirectionSignal>()\r\n  const [getRows, setRows] = createSignal<RowsSignal>(props.rows, false)\r\n\r\n  // update the local copy whenever the parent updates\r\n  createComputed(() => {\r\n    setRows(props.rows)\r\n  })\r\n\r\n  function getSortDirection(): SortDirection {\r\n    const sortDirection = getSortDirectionSignal()\r\n    if (sortDirection !== undefined) {\r\n      return sortDirection\r\n    }\r\n    // use default sort direction:\r\n    else if (props.defaultSortDirection !== undefined) {\r\n      return props.defaultSortDirection\r\n    } else {\r\n      return [null, null]\r\n    }\r\n  }\r\n\r\n  function generateSortCallback(columnID: IndexType) {\r\n    return (e: MouseEvent) => {\r\n      setSortDirection(sortClickHandler(getSortDirection(), columnID, /* append */ e.shiftKey))\r\n      sortRows()\r\n    }\r\n  }\r\n\r\n  const rowSorter: NonNullable<Props<IndexType>[\"rowSorter\"]> = props.rowSorter ?? defaultSorter\r\n\r\n  // Row sorting logic:\r\n  function sortRows() {\r\n    const currentSortDirection = getSortDirection()\r\n    // if should reset sort\r\n    if (\r\n      currentSortDirection[0] === null &&\r\n      /* if defaultSortDirection is provided */ props.defaultSortDirection !== undefined\r\n    ) {\r\n      // reset sort\r\n      setRows(rowSorter(getRows(), props.defaultSortDirection))\r\n    }\r\n    // if should sort normally\r\n    else if (currentSortDirection[0] !== null) {\r\n      setRows(rowSorter(getRows(), currentSortDirection))\r\n    } // else ignore sort\r\n  }\r\n\r\n  // static props:\r\n  // destructure the props that are not tracked and are used inside the loop (cache the property access)\r\n  const {\r\n    headerRenderer = defaultHeaderRenderer,\r\n    bodyRenderer = defaultBodyRenderer,\r\n    getRowID = defaultGetRowID,\r\n    accessors,\r\n  } = props\r\n\r\n  function maybeRowID(row: Row) {\r\n    // if accessors are needed\r\n    if (accessors) {\r\n      return getRowID(row)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  if (props.columns === undefined) {\r\n    props.columns = defaultColumnMaker(props.rows, props.representitiveRowNumber)\r\n  }\r\n\r\n  // initial sort\r\n  sortRows()\r\n\r\n  return (\r\n    <table className={`solid-simple-table ${props.className ?? \"\"}`} style={props.style}>\r\n      <thead>\r\n        <tr>\r\n          <For each={props.columns}>\r\n            {(column) => {\r\n              const isSortable = column.sortable !== false\r\n              return (\r\n                <th\r\n                  id={accessors ? String(column.id) : undefined}\r\n                  className={isSortable ? \"sortable\" : undefined}\r\n                  onClick={isSortable ? generateSortCallback(column.id) : undefined}\r\n                >\r\n                  {headerRenderer(column)}\r\n                  {isSortable ? renderHeaderIcon(getSortDirection(), column.id) : undefined}\r\n                </th>\r\n              )\r\n            }}\r\n          </For>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <For each={getRows()}>\r\n          {(row) => {\r\n            const rowID = maybeRowID(row)\r\n            return (\r\n              <tr id={rowID}>\r\n                <For each={props.columns!}>\r\n                  {(column) => {\r\n                    return (\r\n                      <td\r\n                        onClick={column.onClick !== undefined ? (e: MouseEvent) => column.onClick!(e, row) : undefined}\r\n                        id={rowID ? `${rowID}.${column.id}` : undefined}\r\n                      >\r\n                        {bodyRenderer(row, column.id)}\r\n                      </td>\r\n                    )\r\n                  }}\r\n                </For>\r\n              </tr>\r\n            )\r\n          }}\r\n        </For>\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst ARROW = {\r\n  UP: \"↑\",\r\n  DOWN: \"↓\",\r\n  BOTH: \"⇅\",\r\n}\r\n\r\nfunction defaultColumnMaker(rows: Array<Row>, representitiveRowNumber: number = 0) {\r\n  // construct the column information based on the representitive row\r\n  const representitiveRow = rows[representitiveRowNumber]\r\n  const columnIDs = Object.keys(representitiveRow)\r\n\r\n  // make Array<{key: columnID}>\r\n  const columnNumber = columnIDs.length\r\n  const columns: Array<Column> = new Array(columnNumber)\r\n  for (let iCol = 0; iCol < columnNumber; iCol++) {\r\n    columns[iCol] = { id: columnIDs[iCol] }\r\n  }\r\n  return columns\r\n}\r\n\r\n// Returns a string from any value\r\nfunction stringer(value: any) {\r\n  if (typeof value === \"string\") {\r\n    return value\r\n  } else {\r\n    return JSON.stringify(value)\r\n  }\r\n}\r\n\r\nfunction defaultHeaderRenderer(column: Column) {\r\n  return column.label ?? column.id\r\n}\r\n\r\nfunction defaultBodyRenderer(row: Row, columnID: IndexType) {\r\n  if (typeof row === \"object\") {\r\n    return stringer(row[columnID])\r\n  } else {\r\n    return stringer(row)\r\n  }\r\n}\r\n\r\nfunction defaultGetRowID(row: Row) {\r\n  return stringer(row)\r\n}\r\n\r\nfunction renderHeaderIcon(sortDirection: SortDirection, columnID: IndexType) {\r\n  let icon\r\n  if (sortDirection[0] === null || sortDirection[0] !== columnID) {\r\n    icon = ARROW.BOTH\r\n  } else {\r\n    icon = sortDirection[1] === \"asc\" ? ARROW.DOWN : ARROW.UP\r\n  }\r\n  return <span className=\"sort-icon\">{icon}</span>\r\n}\r\n\r\nfunction sortClickHandler(sortDirection: SortDirection, columnID: IndexType, append: boolean) {\r\n  let sortDirectionNew: SortDirection\r\n\r\n  // if holding shiftKey while clicking: reset sorting\r\n  if (append) {\r\n    sortDirectionNew = [null, null]\r\n  }\r\n  // if clicking on an already sorted column: invert direction on click\r\n  else if (sortDirection[0] === columnID) {\r\n    sortDirectionNew = [\r\n      /* previousSortedColumn */ sortDirection[0],\r\n      /* previousSortedDirection */ sortDirection[1] === \"asc\" ? \"desc\" : \"asc\", // invert direction\r\n    ]\r\n  }\r\n  // if clicking on a new column\r\n  else {\r\n    sortDirectionNew = [columnID, \"asc\"]\r\n  }\r\n  return sortDirectionNew\r\n}\r\n\r\n/**\r\n * Default alphabetical sort function\r\n *\r\n * @param rows: The rows of the table\r\n * @param columnID: The last clicked columnID\r\n */\r\nfunction defaultSorter(\r\n  rows: Array<number | string | Record<IndexType, any>>,\r\n  sortDirection: NonNullSortDirection\r\n): Array<Row> {\r\n  if (!rows.length) {\r\n    return rows\r\n  }\r\n\r\n  let rowsNew: typeof rows\r\n  const columnID = sortDirection[0]\r\n  if (typeof rows[0] === \"object\") {\r\n    rowsNew = rows.sort((r1, r2) => {\r\n      const r1_val = (r1 as Record<IndexType, any>)[columnID]\r\n      const r2_val = (r2 as Record<IndexType, any>)[columnID]\r\n      if (r1_val === r2_val) {\r\n        // equal values\r\n        return 0\r\n      } else if (r1_val < r2_val) {\r\n        return -1 //r1_val comes first\r\n      } else {\r\n        return 1 // r2_val comes first\r\n      }\r\n    })\r\n  } else {\r\n    rowsNew = rows.sort()\r\n  }\r\n\r\n  return sortDirection[1] === \"desc\" ? rowsNew.reverse() : rowsNew\r\n}\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$742566e9cf1534e088d4bb910cf7cb21$export$sharedConfig","$742566e9cf1534e088d4bb910cf7cb21$var$setHydrateContext","context","$742566e9cf1534e088d4bb910cf7cb21$export$equalFn","b","$742566e9cf1534e088d4bb910cf7cb21$var$ERROR","$742566e9cf1534e088d4bb910cf7cb21$var$runEffects","$742566e9cf1534e088d4bb910cf7cb21$var$runQueue","$742566e9cf1534e088d4bb910cf7cb21$var$NOTPENDING","$742566e9cf1534e088d4bb910cf7cb21$var$UNOWNED","owned","cleanups","owner","$742566e9cf1534e088d4bb910cf7cb21$var$transPending","$742566e9cf1534e088d4bb910cf7cb21$var$setTransPending","$742566e9cf1534e088d4bb910cf7cb21$export$createSignal","$742566e9cf1534e088d4bb910cf7cb21$var$Owner","$742566e9cf1534e088d4bb910cf7cb21$var$Listener","$742566e9cf1534e088d4bb910cf7cb21$var$Pending","$742566e9cf1534e088d4bb910cf7cb21$var$Updates","$742566e9cf1534e088d4bb910cf7cb21$var$Effects","$742566e9cf1534e088d4bb910cf7cb21$var$Transition","$742566e9cf1534e088d4bb910cf7cb21$var$ExecCount","$742566e9cf1534e088d4bb910cf7cb21$export$createRoot","fn","detachedOwner","listener","root","length","attached","result","$742566e9cf1534e088d4bb910cf7cb21$var$runUpdates","$742566e9cf1534e088d4bb910cf7cb21$var$cleanNode","value","areEqual","options","s","observers","observerSlots","pending","comparator","undefined","$742566e9cf1534e088d4bb910cf7cb21$var$readSignal","bind","$742566e9cf1534e088d4bb910cf7cb21$var$writeSignal","$742566e9cf1534e088d4bb910cf7cb21$export$createComputed","$742566e9cf1534e088d4bb910cf7cb21$var$updateComputation","$742566e9cf1534e088d4bb910cf7cb21$var$createComputation","$742566e9cf1534e088d4bb910cf7cb21$export$createRenderEffect","$742566e9cf1534e088d4bb910cf7cb21$export$createMemo","c","state","$742566e9cf1534e088d4bb910cf7cb21$export$batch","q","i","data","call","$742566e9cf1534e088d4bb910cf7cb21$export$untrack","$742566e9cf1534e088d4bb910cf7cb21$export$onCleanup","push","$742566e9cf1534e088d4bb910cf7cb21$export$createContext","defaultValue","id","Symbol","Provider","$742566e9cf1534e088d4bb910cf7cb21$var$createProvider","$742566e9cf1534e088d4bb910cf7cb21$export$children","children","$742566e9cf1534e088d4bb910cf7cb21$var$resolveChildren","this","sources","updates","$742566e9cf1534e088d4bb910cf7cb21$var$lookDownstream","sSlot","sourceSlots","running","has","tValue","isComp","add","o","disposed","$742566e9cf1534e088d4bb910cf7cb21$var$markUpstream","pure","Error","node","time","$742566e9cf1534e088d4bb910cf7cb21$var$runComputation","nextValue","err","$742566e9cf1534e088d4bb910cf7cb21$var$handleError","updatedAt","init","tOwned","$742566e9cf1534e088d4bb910cf7cb21$var$runTop","top","suspense","inFallback","effects","runningTransition","$742566e9cf1534e088d4bb910cf7cb21$var$STALE","wait","cbs","promises","size","apply","cb","forEach","v","len","$742566e9cf1534e088d4bb910cf7cb21$var$completeUpdates","queue","source","pop","index","obs","n","$742566e9cf1534e088d4bb910cf7cb21$var$reset","fns","$742566e9cf1534e088d4bb910cf7cb21$var$lookup","f","key","Array","isArray","results","props","$742566e9cf1534e088d4bb910cf7cb21$var$FALLBACK","$742566e9cf1534e088d4bb910cf7cb21$export$createComponent","Comp","count","r","$742566e9cf1534e088d4bb910cf7cb21$export$For","fallback","list","mapFn","items","mapped","disposers","indexes","ctx","j","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","newLen","disposer","mapper","Math","min","Map","get","set","slice","$742566e9cf1534e088d4bb910cf7cb21$export$mapArray","each","$ab32f8da2d56b1564f45486c54199324$export$Properties","Set","$ab32f8da2d56b1564f45486c54199324$export$ChildProperties","$ab32f8da2d56b1564f45486c54199324$export$DelegatedEvents","$ab32f8da2d56b1564f45486c54199324$export$SVGElements","$ab32f8da2d56b1564f45486c54199324$var$reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","removeChild","t","sequence","replaceChild","$ab32f8da2d56b1564f45486c54199324$var$$$EVENTS","$ab32f8da2d56b1564f45486c54199324$export$template","html","check","isSVG","document","createElement","innerHTML","split","content","firstChild","$ab32f8da2d56b1564f45486c54199324$export$delegateEvents","eventNames","e","l","name","addEventListener","$ab32f8da2d56b1564f45486c54199324$var$eventHandler","$ab32f8da2d56b1564f45486c54199324$export$setAttribute","removeAttribute","setAttribute","$ab32f8da2d56b1564f45486c54199324$export$addEventListener","handler","delegate","$ab32f8da2d56b1564f45486c54199324$export$style","prev","nodeStyle","style","cssText","removeProperty","setProperty","$ab32f8da2d56b1564f45486c54199324$export$insert","parent","accessor","marker","initial","$ab32f8da2d56b1564f45486c54199324$var$insertExpression","current","type","composedPath","target","Object","defineProperty","configurable","cancelBubble","host","Node","unwrapArray","multi","toString","nodeType","createTextNode","$ab32f8da2d56b1564f45486c54199324$var$cleanChildren","textContent","array","$ab32f8da2d56b1564f45486c54199324$var$normalizeIncomingArray","$ab32f8da2d56b1564f45486c54199324$var$appendNodes","appendChild","console","warn","normalized","unwrap","dynamic","replacement","inserted","el","isParent","$da56bea33ed1b7df694263f1e7d4e796$var$_typeof","obj","iterator","$da56bea33ed1b7df694263f1e7d4e796$export$default","$da56bea33ed1b7df694263f1e7d4e796$export$__esModule","$da56bea33ed1b7df694263f1e7d4e796$exports","constructor","prototype","arr","$3e1098cbd31a7b8b8fbfc49c26671e91$export$default","$3e1098cbd31a7b8b8fbfc49c26671e91$exports","$173398ddc81b31b954b4d1e21e60f9de$var$arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","$1b6f4267441ccec51671910617d77419$export$default","$1b6f4267441ccec51671910617d77419$exports","$173398ddc81b31b954b4d1e21e60f9de$var$iterableToArrayLimit","arr2","$e4d46be400d915e184bfb233e629b26f$export$default","$e4d46be400d915e184bfb233e629b26f$exports","$f332936d0cd3e0ccd57025d228cac6cb$var$arrayLikeToArray","minLen","from","test","$f332936d0cd3e0ccd57025d228cac6cb$export$default","$f332936d0cd3e0ccd57025d228cac6cb$exports","$173398ddc81b31b954b4d1e21e60f9de$var$unsupportedIterableToArray","TypeError","$53ebfac3f090531a5e42dff959a2c521$export$default","$53ebfac3f090531a5e42dff959a2c521$exports","$173398ddc81b31b954b4d1e21e60f9de$var$nonIterableRest","$173398ddc81b31b954b4d1e21e60f9de$export$default","$173398ddc81b31b954b4d1e21e60f9de$exports","getSortDirectionSignal","setSortDirection","rows","_createSignal4","$173398ddc81b31b954b4d1e21e60f9de$$interop$default","_createSignal3","getRows","setRows","getSortDirection","sortDirection","defaultSortDirection","rowSorter","$7d9195cb61a270672c4e245e1199f8e7$var$defaultSorter","sortRows","currentSortDirection","headerRenderer","$7d9195cb61a270672c4e245e1199f8e7$var$defaultHeaderRenderer","bodyRenderer","$7d9195cb61a270672c4e245e1199f8e7$var$defaultBodyRenderer","getRowID","$7d9195cb61a270672c4e245e1199f8e7$var$defaultGetRowID","accessors","columns","representitiveRowNumber","representitiveRow","columnIDs","keys","columnNumber","iCol","$7d9195cb61a270672c4e245e1199f8e7$var$defaultColumnMaker","column","columnID","isSortable","sortable","append","sortDirectionNew","$7d9195cb61a270672c4e245e1199f8e7$var$sortClickHandler","shiftKey","icon","$7d9195cb61a270672c4e245e1199f8e7$var$ARROW","$7d9195cb61a270672c4e245e1199f8e7$var$renderHeaderIcon","String","row","rowID","maybeRowID","onClick","className","_v$2","$7d9195cb61a270672c4e245e1199f8e7$var$stringer","JSON","stringify","label","rowsNew","sort","r1","r2","r1_val","r2_val","reverse"],"version":3,"file":"SimpleTable.js.map"}